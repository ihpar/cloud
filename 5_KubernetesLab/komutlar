**_ Docker Compose _**

(Docker Compose ile çalıştırılan konteynerler otomatik olarak aynı docker ağında çalışırlar)

- detached mode ile docker compose dosyasını çalıştırma:
  docker-compose up -d
  veya
  docker-compose -f my_docker_compose_file.yaml up -d

- mevcut konteynerleri listeleme:
  docker ps

- konteyner loglarını görüntüleme:
  docker logs konteyner_ismi

- docker compose ile çalıştırılmış konteynerleri durdurma:
  docker-compose down
  veya
  docker-compose -f my_docker_compose_file.yaml down

- docker compose'un imajları tekrar build etmesini zorlama:
  docker-compose up --build

**_ Kubernetes _**

- minikube kurulmalı
  https://minikube.sigs.k8s.io/docs/start/

- minikube başlatma:
  minikube start

- minikube inceleme
  minikube status

- K8s ile Docker imajlarını çalıştırmak için imajlar öncelikle bir repository'ye (Docker hub) yüklenmiş olmalıdır.

docker build -t user/repo .
docker login
docker push user/repo

- kubectl ile Deployment Objesi oluşturma
  kubectl create deployment my-app --image=ihpar/my-db

- kubectl ile deployment listeleme
  kubectl get deployments

- kubectl ile pod listeleme
  kubectl get pods

- minikube dashboard görüntüleme
  minikube dashboard

- deployment içindeki pod'daki konteynere dış dünyadan erişme
  \*\* LoadBalancer servisi oluşturma:
  kubectl expose deployment my-app --type=LoadBalancer --port=3050

\*\* servisleri listeleme
kubectl get services

\*\* minikube ile, oluşturmuş olduğumuz LoadBalancer servisine erişme
minikube service my-app

\*\* postman ile db uygulamamıza erişme

- Deployment scaling
  kubectl scale deployment/my-app --replicas=3
  kubectl get pods
  kubectl scale deployment/my-app --replicas=1
  kubectl get pods

- Deployment silme
  kubectl delete deployment my-app
  kubectl get pods
  kubectl get services
  kubectl delete services my-app

- Declerative olarak deployment oluşturma
  https://kubernetes.io/docs/concepts/workloads/controllers/deployment/

- Manifest dosyaları
  https://kubernetes.io/docs/concepts/overview/working-with-objects/

1. kubectl apply -f deployment.yaml

2. minikube service my-service

3. postman testleri

4. kubectl delete -f deployment.yaml

- Aynı pod içinde 1'den çok konteyner çalıştırma ve konteynerler arası iletişim
  KubLab/Part2

-- iptal -- 1. docker-compose up -d: sistemi test edelim. Devamında docker-compose down ile konteynerleri durduralım.

2. networking.yaml dosyasını inceleyelim

3. "kubectl apply -f networking.yaml" -> ardından -> "minikube service my-second-service"

4. kubectl delete -f networking.yaml

- db ve server uygulama konteynerlerini farklı podlarda çalıştırma

1. db-deployment.yaml, server-deployment.yaml, db-service.yaml, server-service.yaml dosyalarını inceleyelim

2. server içerisindeki db uygulaması adresi process.env.DB_SERVICE_SERVICE_HOST olarak güncellendikten sonra
  docker hub'a yeni imaj oluşturulup push edilmeli

3. kubectl apply -f db-deployment.yaml -f server-deployment.yaml -f server-service.yaml -f db-service.yaml

4. minikube service server-service

5. kubectl delete -f db-deployment.yaml -f server-deployment.yaml -f server-service.yaml -f db-service.yaml

- minikube durdurma:
  minikube stop
